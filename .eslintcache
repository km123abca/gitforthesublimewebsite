[{"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\index.js":"1","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\reportWebVitals.js":"2","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\App.js":"3","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Library.js":"4","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Header.js":"5","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Dropdown.js":"6","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\DropdownMenusalone.js":"7","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\CssTrans.js":"8","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\DropdownItemsalone.js":"9","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\NavItemsalone.js":"10","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Login.js":"11","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\AddNewBook.js":"12","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Books.js":"13","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\firebase.js":"14","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\BookOne.js":"15","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\StateProvider.js":"16","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\reducer.js":"17","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Logout.js":"18","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\BooksMenu.js":"19","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Booksdd.js":"20","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\EditBook.js":"21","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\BookDetailed.js":"22","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Dummy.js":"23"},{"size":695,"mtime":1608707873741,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":2209,"mtime":1610257603634,"results":"27","hashOfConfig":"25"},{"size":761,"mtime":1608706164684,"results":"28","hashOfConfig":"25"},{"size":1819,"mtime":1610188819039,"results":"29","hashOfConfig":"25"},{"size":4374,"mtime":1607334859375,"results":"30","hashOfConfig":"25"},{"size":2459,"mtime":1609479761853,"results":"31","hashOfConfig":"25"},{"size":1321,"mtime":1609658473097,"results":"32","hashOfConfig":"25"},{"size":354,"mtime":1607335043072,"results":"33","hashOfConfig":"25"},{"size":527,"mtime":1609478623936,"results":"34","hashOfConfig":"25"},{"size":2045,"mtime":1608706164688,"results":"35","hashOfConfig":"25"},{"size":4115,"mtime":1609052701798,"results":"36","hashOfConfig":"25"},{"size":7996,"mtime":1610256425192,"results":"37","hashOfConfig":"25"},{"size":520,"mtime":1608706164694,"results":"38","hashOfConfig":"25"},{"size":6043,"mtime":1610257553630,"results":"39","hashOfConfig":"25"},{"size":373,"mtime":1608707237397,"results":"40","hashOfConfig":"25"},{"size":886,"mtime":1610014617915,"results":"41","hashOfConfig":"25"},{"size":273,"mtime":1608715116562,"results":"42","hashOfConfig":"25"},{"size":487,"mtime":1608734600190,"results":"43","hashOfConfig":"25"},{"size":3023,"mtime":1610014546622,"results":"44","hashOfConfig":"25"},{"size":4747,"mtime":1609482895785,"results":"45","hashOfConfig":"25"},{"size":3201,"mtime":1610532297354,"results":"46","hashOfConfig":"25"},{"size":162,"mtime":1610283078318,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1wiqzcu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"50"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\index.js",[],["112","113"],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\reportWebVitals.js",[],["114","115"],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\App.js",["116","117"],"import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Library from \"./LibraryManagement/Library\";\r\nimport Books from \"./LibraryManagement/Books\";\r\nimport Login from \"./LibraryManagement/Login\";\r\nimport AddNewBook from \"./LibraryManagement/AddNewBook\";\r\nimport { auth } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Logout from \"./LibraryManagement/Logout\";\r\nimport EditBook from \"./LibraryManagement/EditBook\";\r\nimport BookDetailed from \"./LibraryManagement/BookDetailed\";\r\nfunction App() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  useEffect(() => {\r\n    const unsuscribe = auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        //user is logged in\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: authUser,\r\n        });\r\n        // dispatch({ type: \"SET_BASKET_ON_RELOAD\" });\r\n      } else {\r\n        //user is logged out\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: { email: \"Guest\" },\r\n        });\r\n        // dispatch({ type: \"SET_BASKET_ON_RELOAD\" });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsuscribe();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/library\">\r\n            <Library />\r\n          </Route>\r\n          <Route exact path=\"/library/books\">\r\n            <Books />\r\n          </Route>\r\n          <Route exact path=\"/library/add\">\r\n            <AddNewBook />\r\n          </Route>\r\n          <Route exact path=\"/library/edit/\">\r\n            <EditBook />\r\n          </Route>\r\n          <Route exact path=\"/library/detailed/\">\r\n            <BookDetailed />\r\n          </Route>\r\n          <Route exact path=\"/library/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/library/logout\">\r\n            <Logout />\r\n          </Route>\r\n\r\n          <Route path=\"/p2\">\r\n            <h1>This is project2</h1>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <h1>This is the Home Page</h1>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Library.js",["118","119","120"],"import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./Library.css\";\r\n\r\nfunction Library() {\r\n  return (\r\n    // <div>\r\n    //   <Router>\r\n    //     <Switch>\r\n    //       <Route path=\"/books\">\r\n    //         <Header />\r\n    //         Nothing here right now\r\n    //       </Route>\r\n    //       <Route path=\"/\">\r\n    //         <Header />\r\n    //         <h1>Welcome page is under construction</h1>\r\n    //       </Route>\r\n    //     </Switch>\r\n    //   </Router>\r\n    // </div>\r\n    <div>\r\n      <Header />\r\n      <div className=\"library__body\">\r\n        <h1>The Library home is under construction</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Header.js",["121","122","123"],"import React from \"react\";\r\nimport \"./Header.css\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport DropdownMenusalone from \"./DropdownMenusalone\";\r\nimport NavItemsalone from \"./NavItemsalone\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BooksMenu from \"./BooksMenu\";\r\nimport Booksdd from \"./Booksdd\";\r\n\r\nfunction Header() {\r\n  const [{ user }] = useStateValue();\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <div className=\"header__subjects header__largeScreen\">\r\n          <Link to=\"/library\">Home</Link>\r\n        </div>\r\n        <div className=\"header__subjects header__largeScreen\">My Account</div>\r\n        <div className=\"header__subjects header__largeScreen\">\r\n          <BooksMenu menutitle=\"books\">\r\n            <Booksdd />{\" \"}\r\n          </BooksMenu>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__right\">\r\n        {/* <Dropdown className=\"header__smallScreen\" /> */}\r\n        <div className=\"header__subjects header__largeScreen\">Contacts</div>\r\n        <div className=\"header__subjects header__largeScreen\">\r\n          Welcome {\" \" + user.email}\r\n        </div>\r\n        {user.email != \"Guest\" && (\r\n          <div className=\"header__subjects header__largeScreen\">\r\n            <Link to=\"/library/logout\">Logout</Link>\r\n          </div>\r\n        )}\r\n        {user.email == \"Guest\" && (\r\n          <div className=\"header__subjects header__largeScreen\">\r\n            <Link to=\"/library/login\">Login</Link>\r\n          </div>\r\n        )}\r\n\r\n        <NavItemsalone\r\n          className=\"header__subjects header__smallScreen\"\r\n          menutitle=\"burger\"\r\n        >\r\n          <DropdownMenusalone className=\"\" />\r\n        </NavItemsalone>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Dropdown.js",["124","125"],"import \"./Dropdown.css\";\r\nimport { ReactComponent as BellIcon } from \"./icons/bell.svg\";\r\nimport { ReactComponent as MessengerIcon } from \"./icons/messenger.svg\";\r\nimport { ReactComponent as CaretIcon } from \"./icons/caret.svg\";\r\nimport { ReactComponent as PlusIcon } from \"./icons/plus.svg\";\r\nimport { ReactComponent as CogIcon } from \"./icons/cog.svg\";\r\nimport { ReactComponent as ChevronIcon } from \"./icons/chevron.svg\";\r\nimport { ReactComponent as ArrowIcon } from \"./icons/arrow.svg\";\r\nimport { ReactComponent as BoltIcon } from \"./icons/bolt.svg\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Dropdown({ className }) {\r\n  return (\r\n    <Navbar className={className}>\r\n      <NavItem icon={<PlusIcon />} />\r\n      <NavItem icon={<BellIcon />} />\r\n      <NavItem icon={<MessengerIcon />} />\r\n\r\n      <NavItem icon={<CaretIcon />}>\r\n        <DropdownMenu></DropdownMenu>\r\n      </NavItem>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className={`${\"navbar \" + props.className}`}>\r\n      <ul className=\"navbar-nav\">{props.children}</ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction NavItem(props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <a href=\"#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\r\n        {props.icon}\r\n      </a>\r\n\r\n      {open && props.children}\r\n      {/* {open && <h1>Hey</h1>} */}\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction DropdownMenu() {\r\n  const [activeMenu, setActiveMenu] = useState(\"main\");\r\n  const [menuHeight, setMenuHeight] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setMenuHeight(dropdownRef.current?.firstChild.offsetHeight);\r\n  }, []);\r\n\r\n  function calcHeight(el) {\r\n    const height = el.offsetHeight;\r\n    setMenuHeight(height);\r\n  }\r\n\r\n  function DropdownItem(props) {\r\n    return (\r\n      <a\r\n        href=\"#\"\r\n        className=\"menu-item\"\r\n        onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}\r\n      >\r\n        <span className=\"icon-button\">{props.leftIcon}</span>\r\n        {props.children}\r\n        <span className=\"icon-right\">{props.rightIcon}</span>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown\" style={{ height: menuHeight }} ref={dropdownRef}>\r\n      <CSSTransition\r\n        in={activeMenu === \"main\"}\r\n        timeout={500}\r\n        classNames=\"menu-primary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem>Home</DropdownItem>\r\n          <DropdownItem\r\n            leftIcon={<CogIcon />}\r\n            rightIcon={<ChevronIcon />}\r\n            goToMenu=\"settings\"\r\n          >\r\n            Books\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            leftIcon=\"🦧\"\r\n            rightIcon={<ChevronIcon />}\r\n            goToMenu=\"animals\"\r\n          >\r\n            My Account\r\n          </DropdownItem>\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={activeMenu === \"settings\"}\r\n        timeout={500}\r\n        classNames=\"menu-secondary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem goToMenu=\"main\" leftIcon={<ArrowIcon />}>\r\n            <h2>My Tutorial</h2>\r\n          </DropdownItem>\r\n          <DropdownItem leftIcon={<BoltIcon />}>HTML</DropdownItem>\r\n          <DropdownItem leftIcon={<BoltIcon />}>CSS</DropdownItem>\r\n          <DropdownItem leftIcon={<BoltIcon />}>JavaScript</DropdownItem>\r\n          <DropdownItem leftIcon={<BoltIcon />}>Awesome!</DropdownItem>\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={activeMenu === \"animals\"}\r\n        timeout={500}\r\n        classNames=\"menu-secondary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem goToMenu=\"main\" leftIcon={<ArrowIcon />}>\r\n            <h2>Animals</h2>\r\n          </DropdownItem>\r\n          <DropdownItem leftIcon=\"🦘\">Kangaroo</DropdownItem>\r\n          <DropdownItem leftIcon=\"🐸\">Frog</DropdownItem>\r\n          <DropdownItem leftIcon=\"🦋\">Horse?</DropdownItem>\r\n          <DropdownItem leftIcon=\"🦔\">Hedgehog</DropdownItem>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\DropdownMenusalone.js",["126"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport CssTrans from \"./CssTrans\";\r\nimport \"./DropdownMenusalone.css\";\r\n\r\nfunction DropdownMenusalone(props) {\r\n  const [activeMenu, setActiveMenu] = useState(\"main\");\r\n  const [menuHeight, setMenuHeight] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n  useEffect(() => {\r\n    setMenuHeight(dropdownRef.current?.firstChild.offsetHeight);\r\n  }, []);\r\n  function calcHeight(el) {\r\n    const height = el.offsetHeight;\r\n    setMenuHeight(height);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\"dropdownMenusalone__dropdown \" + props.className}\r\n      // className={\"dropdownMenusalone__dropdown\"}\r\n      style={{ height: menuHeight }}\r\n      ref={dropdownRef}\r\n    >\r\n      <CssTrans\r\n        setMenuHeight={setMenuHeight}\r\n        setActiveMenu={setActiveMenu}\r\n        activeMenu={activeMenu}\r\n        thisMenu=\"main\"\r\n        menuClassName=\"menu-primary\"\r\n        dropdownstuff={[\r\n          { name: \"Home\", link: \"/library/\" },\r\n          { name: \"Books\", goToMenu: \"settings\" },\r\n          { name: \"My Account\", goToMenu: \"accountfns\" },\r\n        ]}\r\n      />\r\n      <CssTrans\r\n        setMenuHeight={setMenuHeight}\r\n        setActiveMenu={setActiveMenu}\r\n        activeMenu={activeMenu}\r\n        thisMenu=\"settings\"\r\n        menuClassName=\"menu-secondary\"\r\n        dropdownstuff={[\r\n          { name: \"Back\", goToMenu: \"main\" },\r\n          { name: \"View all\", link: \"/library/books\" },\r\n          { name: \"View by category\", goToMenu: \"categ\" },\r\n          { name: \"View by Author\" },\r\n        ]}\r\n      />\r\n      <CssTrans\r\n        setMenuHeight={setMenuHeight}\r\n        setActiveMenu={setActiveMenu}\r\n        activeMenu={activeMenu}\r\n        thisMenu=\"categ\"\r\n        menuClassName=\"menu-secondary\"\r\n        dropdownstuff={[\r\n          { name: \"Back\", goToMenu: \"settings\" },\r\n          { name: \"children\" },\r\n          { name: \"Thriller\" },\r\n          { name: \"Horror\" },\r\n          { name: \"Science Fiction\" },\r\n        ]}\r\n      />\r\n      <CssTrans\r\n        setMenuHeight={setMenuHeight}\r\n        setActiveMenu={setActiveMenu}\r\n        activeMenu={activeMenu}\r\n        thisMenu=\"accountfns\"\r\n        menuClassName=\"menu-secondary\"\r\n        dropdownstuff={[\r\n          { name: \"Back\", goToMenu: \"main\" },\r\n          { name: \"Login\" },\r\n          { name: \"Register\" },\r\n          { name: \"Members\" },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropdownMenusalone;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\CssTrans.js",["127","128"],"import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./CssTrans.css\";\r\nimport DropdownItemsalone from \"./DropdownItemsalone\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// menuClassName=menu-primary\r\n// thisMenu=main\r\nfunction CssTrans({\r\n  activeMenu,\r\n  setActiveMenu,\r\n  thisMenu,\r\n  menuClassName,\r\n  dropdownstuff,\r\n  setMenuHeight,\r\n}) {\r\n  const history = useHistory();\r\n  function calcHeight(e) {\r\n    const height = e.offsetHeight;\r\n    setMenuHeight(height);\r\n  }\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={activeMenu == thisMenu}\r\n      timeout={500}\r\n      classNames={menuClassName}\r\n      unmountOnExit\r\n      onEnter={calcHeight}\r\n    >\r\n      <div className=\"cssTrans__menu\">\r\n        {dropdownstuff.map((item, ind) => (\r\n          <DropdownItemsalone\r\n            goToMenu={item.goToMenu ? item.goToMenu : \"\"}\r\n            setActiveMenu={setActiveMenu}\r\n          >\r\n            {item.link ? (\r\n              <a href=\"#\" onClick={() => history.push(item.link)}>\r\n                {/* history.push({ pathname: item.link })}> */}\r\n                {item.name}\r\n              </a>\r\n            ) : (\r\n              item.name\r\n            )}\r\n          </DropdownItemsalone>\r\n        ))}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default CssTrans;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\DropdownItemsalone.js",["129"],"import React from \"react\";\r\nimport \"./DropdownItemsalone.css\";\r\n\r\nfunction DropdownItemsalone(props) {\r\n  return (\r\n    <a\r\n      href=\"#\"\r\n      className=\"dropdownItemsalone__menu-item\"\r\n      onClick={() => props.goToMenu && props.setActiveMenu(props.goToMenu)}\r\n    >\r\n      {props.children}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default DropdownItemsalone;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\NavItemsalone.js",["130","131"],"import React, { useState } from \"react\";\r\nimport \"./NavItemsalone.css\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\n\r\nfunction NavItemsalone(props) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <li className={\"navItemssalone__nav-item \" + props.className}>\r\n      <a href=\"#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\r\n        {props.menutitle == \"burger\" ? <ListIcon /> : props.menutitle}\r\n      </a>\r\n\r\n      {open && props.children}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavItemsalone;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Login.js",["132"],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport { auth } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pword, setPword] = useState(\"\");\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, pword)\r\n      .then((auth) => {\r\n        history.push(\"/library/books\");\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, pword)\r\n      .then((auth) => {\r\n        history.push(\"/library/books\");\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"login__form\">\r\n        <FormControl>\r\n          <InputLabel>Email</InputLabel>\r\n          <Input\r\n            value={email}\r\n            type=\"email\"\r\n            placeholder=\"Your Email here\"\r\n            onChange={(event) => {\r\n              setEmail(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Password</InputLabel>\r\n          <Input\r\n            value={pword}\r\n            type=\"password\"\r\n            placeholder=\"Your Password here\"\r\n            onChange={(event) => {\r\n              setPword(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!email || !pword}\r\n          color=\"primary\"\r\n          //   type=\"submit\"\r\n          onClick={login}\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n      <Button\r\n        variant=\"contained\"\r\n        disabled={!email || !pword}\r\n        color=\"primary\"\r\n        //   type=\"submit\"\r\n        onClick={register}\r\n      >\r\n        Register\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\AddNewBook.js",["133"],"import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport \"./AddNewBook.css\";\r\n// import { db } from \"../firebase\";\r\nimport db from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction AddNewBook() {\r\n  const classes = useStyles();\r\n  const [bookName, setBookName] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [bookImage, setBookImage] = useState(\"\");\r\n  const [bookDesc, setBookDesc] = useState(\"\");\r\n  const [bookCopies, setBookCopies] = useState(\"\");\r\n  const [bookGenre, setBookGenre] = useState(\"\");\r\n  const logInfo = (event) => {\r\n    event.preventDefault();\r\n    db.collection(\"books\").add({\r\n      bookName: bookName,\r\n      author: author,\r\n      bookImage: \"/bookimages/\" + bookImage,\r\n      bookDesc: bookDesc,\r\n      bookCopies: bookCopies,\r\n      bookGenre: bookGenre,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    clearAll();\r\n    alert(\"Thank you \");\r\n  };\r\n  const clearAll = () => {\r\n    setBookName(\"\");\r\n    setAuthor(\"\");\r\n    setBookImage(\"\");\r\n    setBookDesc(\"\");\r\n    setBookCopies(\"\");\r\n    setBookGenre(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <form className=\"addNewBook__form\">\r\n        <FormControl>\r\n          <InputLabel>Book Name</InputLabel>\r\n          <Input\r\n            value={bookName}\r\n            placeholder=\"Name of the Book\"\r\n            onChange={(event) => {\r\n              setBookName(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Author</InputLabel>\r\n          <Input\r\n            value={author}\r\n            placeholder=\"author\"\r\n            onChange={(event) => {\r\n              setAuthor(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Book Description</InputLabel>\r\n          <Input\r\n            value={bookDesc}\r\n            placeholder=\"Description\"\r\n            onChange={(event) => {\r\n              setBookDesc(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel>Book Genre</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={bookGenre}\r\n            onChange={(event) => {\r\n              setBookGenre(event.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value={\"Science Fiction\"}>Science Fiction</MenuItem>\r\n            <MenuItem value={\"Thriller\"}>Thriller</MenuItem>\r\n            <MenuItem value={\"Children's book\"}>Children's book</MenuItem>\r\n            <MenuItem value={\"Horror\"}>Horror</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <InputLabel>Number of copies</InputLabel>\r\n          <Input\r\n            value={bookCopies}\r\n            placeholder=\"Copies in stock\"\r\n            onChange={(event) => {\r\n              setBookCopies(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Book Image</InputLabel>\r\n          <Input\r\n            value={bookImage}\r\n            placeholder=\"Book Image\"\r\n            onChange={(event) => {\r\n              setBookImage(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!bookName || !author || !bookImage}\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={logInfo}\r\n        >\r\n          Add\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNewBook;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Books.js",["134","135","136","137","138","139","140","141","142","143","144"],"import \"./Books.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport BookOne from \"./BookOne\";\r\nimport \"./Books.css\";\r\nimport db from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Books() {\r\n  const classes = useStyles();\r\n  // const [{ bookGenre }, dispatch] = useStateValue();\r\n  const [bookGenre, setBookGenre] = useState(\"\");\r\n  const [booksAll, setBooksAll] = useState([]);\r\n  const [books, setBooks] = useState([]);\r\n  // console.log(\"here at books:\" + bookGenre);\r\n\r\n  useEffect(() => {\r\n    // bookGenre == \"all\"\r\n    //   ? db\r\n    //       .collection(\"books\")\r\n    //       // .where(\"bookGenre\", \"==\", categ)\r\n    //       .orderBy(\"timestamp\", \"asc\")\r\n    //       .onSnapshot((snapshot) => {\r\n    //         setBooks(\r\n    //           snapshot.docs.map((doc) => ({\r\n    //             id: doc.id,\r\n    //             bookName: doc.data().bookName,\r\n    //             author: doc.data().author,\r\n    //             bookImage: doc.data().bookImage,\r\n    //             bookDesc: doc.data().bookDesc,\r\n    //             bookCopies: doc.data().bookCopies,\r\n    //             bookGenre: doc.data().bookGenre,\r\n    //           }))\r\n    //         );\r\n    //       })\r\n    //   : db\r\n    //       .collection(\"books\")\r\n    //       .where(\"bookGenre\", \"==\", bookGenre)\r\n    //       .orderBy(\"timestamp\", \"asc\")\r\n    //       .onSnapshot((snapshot) => {\r\n    //         setBooks(\r\n    //           snapshot.docs.map((doc) => ({\r\n    //             id: doc.id,\r\n    //             bookName: doc.data().bookName,\r\n    //             author: doc.data().author,\r\n    //             bookImage: doc.data().bookImage,\r\n    //             bookDesc: doc.data().bookDesc,\r\n    //             bookCopies: doc.data().bookCopies,\r\n    //             bookGenre: doc.data().bookGenre,\r\n    //           }))\r\n    //         );\r\n    //       });\r\n    db.collection(\"books\")\r\n      // .where(\"bookGenre\", \"==\", categ)\r\n      .orderBy(\"timestamp\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        setBooksAll(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            bookName: doc.data().bookName,\r\n            author: doc.data().author,\r\n            bookImage: doc.data().bookImage,\r\n            bookDesc: doc.data().bookDesc,\r\n            bookCopies: doc.data().bookCopies,\r\n            bookGenre: doc.data().bookGenre,\r\n          }))\r\n        );\r\n        setBooks(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            bookName: doc.data().bookName,\r\n            author: doc.data().author,\r\n            bookImage: doc.data().bookImage,\r\n            bookDesc: doc.data().bookDesc,\r\n            bookCopies: doc.data().bookCopies,\r\n            bookGenre: doc.data().bookGenre,\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  let location = useLocation();\r\n  const filterBasedOnGenre = (event) => {\r\n    event.preventDefault();\r\n    setBooks(\r\n      booksAll.filter((x) =>\r\n        bookGenre == \"All\" ? true : x.bookGenre == bookGenre\r\n      )\r\n    );\r\n    // alert(\"Here is the filtered content based on \" + bookGenre);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"books__genreselectform\">\r\n        <form className=\"books__genreselectform_list\">\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel>Book Genre</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={bookGenre}\r\n              onChange={(event) => {\r\n                // console.log(\"genre:\" + event.target.value);\r\n                setBookGenre(event.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value={\"All\"}>All</MenuItem>\r\n              <MenuItem value={\"Science Fiction\"}>Science Fiction</MenuItem>\r\n              <MenuItem value={\"Thriller\"}>Thriller</MenuItem>\r\n              <MenuItem value={\"children\"}>Children's book</MenuItem>\r\n              <MenuItem value={\"Horror\"}>Horror</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={!bookGenre}\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={filterBasedOnGenre}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      {books.map((book, ind) => {\r\n        if (ind % 3 == 0 && books.length > ind + 2)\r\n          return (\r\n            <div className={\"books__bookrow\"}>\r\n              <BookOne\r\n                id={books[ind].id}\r\n                bookImage={books[ind].bookImage}\r\n                bookDesc={books[ind].bookDesc}\r\n                bookName={books[ind].bookName}\r\n                author={books[ind].author}\r\n                bookCopies={books[ind].bookCopies}\r\n                bookGenre={books[ind].bookGenre}\r\n                detailed={false}\r\n              />\r\n              <BookOne\r\n                id={books[ind + 1].id}\r\n                bookImage={books[ind + 1].bookImage}\r\n                bookDesc={books[ind + 1].bookDesc}\r\n                bookName={books[ind + 1].bookName}\r\n                author={books[ind + 1].author}\r\n                bookCopies={books[ind + 1].bookCopies}\r\n                bookGenre={books[ind + 1].bookGenre}\r\n                detailed={false}\r\n              />\r\n              <BookOne\r\n                id={books[ind + 2].id}\r\n                bookImage={books[ind + 2].bookImage}\r\n                bookDesc={books[ind + 2].bookDesc}\r\n                bookName={books[ind + 2].bookName}\r\n                author={books[ind + 2].author}\r\n                bookCopies={books[ind + 2].bookCopies}\r\n                bookGenre={books[ind + 2].bookGenre}\r\n                detailed={false}\r\n              />\r\n            </div>\r\n          );\r\n      })}\r\n      {books.length % 3 == 1 ? (\r\n        <div className={\"books__bookrow\"}>\r\n          <BookOne\r\n            id={books[books.length - 1].id}\r\n            bookImage={books[books.length - 1].bookImage}\r\n            bookDesc={books[books.length - 1].bookDesc}\r\n            bookName={books[books.length - 1].bookName}\r\n            author={books[books.length - 1].author}\r\n            bookCopies={books[books.length - 1].bookCopies}\r\n            bookGenre={books[books.length - 1].bookGenre}\r\n            detailed={false}\r\n          />\r\n        </div>\r\n      ) : books.length % 3 == 2 ? (\r\n        <div className={\"books__bookrow\"}>\r\n          <BookOne\r\n            id={books[books.length - 2].id}\r\n            bookImage={books[books.length - 2].bookImage}\r\n            bookDesc={books[books.length - 2].bookDesc}\r\n            bookName={books[books.length - 2].bookName}\r\n            author={books[books.length - 2].author}\r\n            bookCopies={books[books.length - 2].bookCopies}\r\n            bookGenre={books[books.length - 2].bookGenre}\r\n            detailed={false}\r\n          />\r\n          <BookOne\r\n            id={books[books.length - 1].id}\r\n            bookImage={books[books.length - 1].bookImage}\r\n            bookDesc={books[books.length - 1].bookDesc}\r\n            bookName={books[books.length - 1].bookName}\r\n            author={books[books.length - 1].author}\r\n            bookCopies={books[books.length - 1].bookCopies}\r\n            bookGenre={books[books.length - 1].bookGenre}\r\n            detailed={false}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Books;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\firebase.js",[],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\BookOne.js",["145","146","147","148","149"],"import React, { useState } from \"react\";\r\nimport \"./BookOne.css\";\r\nimport db from \"../firebase\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n// for modal\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n//for modal\r\n\r\nfunction BookOne({\r\n  id,\r\n  bookImage,\r\n  bookDesc,\r\n  bookName,\r\n  author,\r\n  bookCopies,\r\n  bookGenre,\r\n  detailed,\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [stat, setStat] = useState(false);\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [numBookCopies, setNumBookCopies] = useState(0);\r\n\r\n  const openModalFn = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeModalFn = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const handleAcceptance = () => {\r\n    handleClose();\r\n\r\n    if (numBookCopies != -1)\r\n      setModalMessage(\r\n        \"You have rented the book, copies remaining:\" + bookCopies\r\n      );\r\n    else setModalMessage(\"Sorry No copies available as of now\");\r\n\r\n    openModalFn();\r\n  };\r\n  const handleDenial = () => {\r\n    handleClose();\r\n    //todo\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  let onbpress = () => {\r\n    console.log(\"button was pressed\");\r\n  };\r\n  let rentABook = () => {\r\n    db.collection(\"books\")\r\n      .doc(id)\r\n      .get()\r\n      .then((data) => {\r\n        let numCopies = parseInt(data.data().bookCopies);\r\n        numCopies -= 1;\r\n        if (numCopies < 0) numCopies = -1;\r\n        setNumBookCopies(numCopies);\r\n        setMsg(\"Are you sure you want to rent this book?\");\r\n        if (numCopies > -1) {\r\n          //to do update database with the new number of copies\r\n          db.collection(\"books\")\r\n            .doc(id)\r\n            .set({ bookCopies: numCopies }, { merge: true });\r\n        }\r\n        handleClickOpen();\r\n      });\r\n  };\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Attention</h2>\r\n      <p id=\"simple-modal-description\">{modalMessage}</p>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"bookOne\">\r\n      {/* modal begins */}\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={closeModalFn}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n      {/* modal ends */}\r\n      {/* start of confirmation dialogue */}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Attention!!!\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {msg}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleAcceptance} color=\"primary\">\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleDenial} color=\"primary\" autoFocus>\r\n            No\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* end of confirmation dialogue */}\r\n      <img src={bookImage} alt=\"no image provided\" />\r\n      <div className=\"bookOne__imgdesc\">\r\n        <div className=\"bookOne__actualdesc\">{bookGenre}</div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={rentABook}\r\n          className=\"bookOne_imagedescbutton\"\r\n        >\r\n          Rent\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(event) => db.collection(\"books\").doc(id).delete()}\r\n          className=\"bookOne_imagedescbutton\"\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"bookOne_imagedescbutton\"\r\n        >\r\n          <Link\r\n            to={{\r\n              pathname: \"/library/edit/\",\r\n              state: {\r\n                id,\r\n                bookImage,\r\n                bookDesc,\r\n                bookName,\r\n                author,\r\n                bookCopies,\r\n                bookGenre,\r\n              },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>{\" \"}\r\n        </Button>\r\n        {!detailed && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"bookOne_imagedescbutton\"\r\n          >\r\n            <Link\r\n              to={{\r\n                pathname: \"/library/detailed/\",\r\n                state: {\r\n                  id,\r\n                  bookImage,\r\n                  bookDesc,\r\n                  bookName,\r\n                  author,\r\n                  bookCopies,\r\n                  bookGenre,\r\n                },\r\n              }}\r\n            >\r\n              More\r\n            </Link>{\" \"}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookOne;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\StateProvider.js",[],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\reducer.js",["150","151"],"export const initialState = {\r\n  user: { email: \"guest\" },\r\n  bookGenre: \"all\",\r\n};\r\n\r\nconst getLocalData = (state) => {\r\n  let localData = [];\r\n  if (state.user) {\r\n    let localDataString = localStorage.getItem(state.user.email);\r\n    if (localDataString) localData = JSON.parse(localDataString);\r\n  } else {\r\n    let localDataString = localStorage.getItem(\"guest\");\r\n    if (localDataString) localData = JSON.parse(localDataString);\r\n  }\r\n  return localData;\r\n};\r\nfunction reducer(state, action) {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"UNSET_USER\":\r\n      return {\r\n        ...state,\r\n        user: { email: \"guest\" },\r\n      };\r\n    case \"SET_GENRE\":\r\n      return {\r\n        ...state,\r\n        bookGenre: action.genre,\r\n      };\r\n  }\r\n}\r\nexport default reducer;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Logout.js",[],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\BooksMenu.js",["152"],"import React, { useState } from \"react\";\r\nimport \"./BooksMenu.css\";\r\n\r\nfunction BooksMenu(props) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div>\r\n      <li className={\"booksMenu__nav-item \"}>\r\n        <a\r\n          href=\"#\"\r\n          className=\"booksMenu__icon-button\"\r\n          onClick={() => setOpen(!open)}\r\n        >\r\n          {props.menutitle}\r\n        </a>\r\n\r\n        {open && props.children}\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BooksMenu;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Booksdd.js",["153","154","155","156","157","158","159","160","161","162","163","164"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Booksdd.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n\r\nfunction Booksdd() {\r\n  const [activeMenu, setActiveMenu] = useState(\"main\");\r\n  const [menuHeight, setMenuHeight] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n  const [{ bookGenre }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    setMenuHeight(dropdownRef.current?.firstChild.offsetHeight);\r\n  }, []);\r\n  function calcHeight(el) {\r\n    const height = el.offsetHeight;\r\n    setMenuHeight(height);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"booksdd__dropdown \"\r\n      style={{ height: menuHeight }}\r\n      ref={dropdownRef}\r\n    >\r\n      <CSSTransition\r\n        in={activeMenu == \"main\"}\r\n        timeout={500}\r\n        classNames=\"menu-primary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"cssTrans__menu\">\r\n          <a\r\n            href=\"#\"\r\n            className=\"dropdownItemsalone__menu-item\"\r\n            onClick={() => {\r\n              dispatch({\r\n                type: \"SET_GENRE\",\r\n                genre: \"all\",\r\n              });\r\n              history.push(\"/library/books\");\r\n            }}\r\n          >\r\n            View all\r\n          </a>\r\n          <a\r\n            href=\"#\"\r\n            className=\"dropdownItemsalone__menu-item\"\r\n            onClick={() => setActiveMenu(\"categ\")}\r\n          >\r\n            View by Category\r\n          </a>\r\n          <a href=\"#\" className=\"dropdownItemsalone__menu-item\">\r\n            View by author\r\n          </a>\r\n          <a\r\n            href=\"#\"\r\n            className=\"dropdownItemsalone__menu-item\"\r\n            onClick={() => history.push(\"/library/add\")}\r\n          >\r\n            Add a New Book\r\n          </a>\r\n        </div>\r\n      </CSSTransition>\r\n      <CSSTransition\r\n        in={activeMenu == \"categ\"}\r\n        timeout={500}\r\n        classNames=\"menu-secondary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"cssTrans__menu\">\r\n          <a\r\n            href=\"#\"\r\n            className=\"dropdownItemsalone__menu-item\"\r\n            onClick={() => setActiveMenu(\"main\")}\r\n          >\r\n            Back\r\n          </a>\r\n          <a\r\n            href=\"#\"\r\n            className=\"dropdownItemsalone__menu-item\"\r\n            onClick={() => {\r\n              dispatch({\r\n                type: \"SET_GENRE\",\r\n                genre: \"children\",\r\n              });\r\n              history.push(\"/library/books\");\r\n            }}\r\n          >\r\n            Children's book\r\n          </a>\r\n          <a href=\"#\" className=\"dropdownItemsalone__menu-item\">\r\n            Thriller\r\n          </a>\r\n          <a href=\"#\" className=\"dropdownItemsalone__menu-item\">\r\n            Horror\r\n          </a>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Booksdd;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\EditBook.js",["165","166","167"],"import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  List,\r\n} from \"@material-ui/core\";\r\nimport \"./EditBook.css\";\r\n// import { db } from \"../firebase\";\r\nimport db from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction EditBook() {\r\n  let location = useLocation();\r\n  // let { id } = props.match.params;\r\n\r\n  // console.log(JSON.stringify(location.state));\r\n  // let bookId = 1;\r\n\r\n  const classes = useStyles();\r\n  const [bid, setBid] = useState(location.state ? location.state.id : \"\");\r\n  const [bookName, setBookName] = useState(\r\n    location.state ? location.state.bookName : \"\"\r\n  );\r\n  const [author, setAuthor] = useState(\r\n    location.state ? location.state.author : \"\"\r\n  );\r\n  const [bookImage, setBookImage] = useState(\r\n    location.state ? location.state.bookImage : \"\"\r\n  );\r\n  const [bookDesc, setBookDesc] = useState(\r\n    location.state ? location.state.bookDesc : \"stuff\"\r\n  );\r\n  const [bookCopies, setBookCopies] = useState(\r\n    location.state ? location.state.bookCopies : \"\"\r\n  );\r\n  const [bookGenre, setBookGenre] = useState(\r\n    location.state ? location.state.bookGenre : \"\"\r\n  );\r\n  const logInfo = (event) => {\r\n    event.preventDefault();\r\n    db.collection(\"books\").doc(bid).set({\r\n      bookName: bookName,\r\n      author: author,\r\n      bookImage: bookImage,\r\n      bookDesc: bookDesc,\r\n      bookCopies: bookCopies,\r\n      bookGenre: bookGenre,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    clearAll();\r\n    alert(\"Thank you \");\r\n  };\r\n  const clearAll = () => {\r\n    setBookName(bookName);\r\n    setAuthor(author);\r\n    setBookImage(bookImage);\r\n    setBookDesc(bookDesc);\r\n    setBookCopies(bookCopies);\r\n    setBookGenre(bookGenre);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <form className=\"addNewBook__form\">\r\n        <FormControl>\r\n          <InputLabel>Book Name</InputLabel>\r\n          <Input\r\n            value={bookName}\r\n            placeholder=\"Name of the Book\"\r\n            onChange={(event) => {\r\n              setBookName(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Author</InputLabel>\r\n          <Input\r\n            value={author}\r\n            placeholder=\"author\"\r\n            onChange={(event) => {\r\n              setAuthor(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Book Description</InputLabel>\r\n          <Input\r\n            value={bookDesc}\r\n            placeholder=\"Description\"\r\n            onChange={(event) => {\r\n              setBookDesc(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel>Book Genre</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={bookGenre}\r\n            onChange={(event) => {\r\n              setBookGenre(event.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value={\"Science Fiction\"}>Science Fiction</MenuItem>\r\n            <MenuItem value={\"Thriller\"}>Thriller</MenuItem>\r\n            <MenuItem value={\"children\"}>Children's book</MenuItem>\r\n            <MenuItem value={\"Horror\"}>Horror</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <InputLabel>Number of copies</InputLabel>\r\n          <Input\r\n            value={bookCopies}\r\n            placeholder=\"Copies in stock\"\r\n            onChange={(event) => {\r\n              setBookCopies(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Book Image</InputLabel>\r\n          <Input\r\n            value={bookImage}\r\n            placeholder=\"Book Image\"\r\n            onChange={(event) => {\r\n              setBookImage(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!bookName || !author || !bookImage}\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={logInfo}\r\n        >\r\n          Update\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBook;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\BookDetailed.js",["168","169","170","171","172","173","174","175","176"],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Dummy.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"177","replacedBy":"181"},{"ruleId":"179","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":14,"column":12,"nodeType":"185","messageId":"186","endLine":14,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":37,"column":6,"nodeType":"189","endLine":37,"endColumn":8,"suggestions":"190"},{"ruleId":"183","severity":1,"message":"191","line":3,"column":27,"nodeType":"185","messageId":"186","endLine":3,"endColumn":33},{"ruleId":"183","severity":1,"message":"192","line":3,"column":35,"nodeType":"185","messageId":"186","endLine":3,"endColumn":41},{"ruleId":"183","severity":1,"message":"193","line":3,"column":43,"nodeType":"185","messageId":"186","endLine":3,"endColumn":48},{"ruleId":"183","severity":1,"message":"194","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":32,"column":21,"nodeType":"197","messageId":"198","endLine":32,"endColumn":23},{"ruleId":"195","severity":1,"message":"199","line":37,"column":21,"nodeType":"197","messageId":"198","endLine":37,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":41,"column":7,"nodeType":"202","endLine":41,"endColumn":74},{"ruleId":"200","severity":1,"message":"201","line":67,"column":7,"nodeType":"202","endLine":71,"endColumn":8},{"ruleId":"183","severity":1,"message":"203","line":12,"column":12,"nodeType":"185","messageId":"186","endLine":12,"endColumn":22},{"ruleId":"195","severity":1,"message":"199","line":24,"column":22,"nodeType":"197","messageId":"198","endLine":24,"endColumn":24},{"ruleId":"200","severity":1,"message":"201","line":37,"column":15,"nodeType":"202","endLine":37,"endColumn":67},{"ruleId":"200","severity":1,"message":"201","line":6,"column":5,"nodeType":"202","endLine":10,"endColumn":6},{"ruleId":"200","severity":1,"message":"201","line":9,"column":7,"nodeType":"202","endLine":9,"endColumn":74},{"ruleId":"195","severity":1,"message":"199","line":10,"column":26,"nodeType":"197","messageId":"198","endLine":10,"endColumn":28},{"ruleId":"183","severity":1,"message":"204","line":8,"column":3,"nodeType":"185","messageId":"186","endLine":8,"endColumn":7},{"ruleId":"183","severity":1,"message":"204","line":8,"column":3,"nodeType":"185","messageId":"186","endLine":8,"endColumn":7},{"ruleId":"183","severity":1,"message":"205","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},{"ruleId":"183","severity":1,"message":"206","line":9,"column":10,"nodeType":"185","messageId":"186","endLine":9,"endColumn":23},{"ruleId":"183","severity":1,"message":"207","line":13,"column":3,"nodeType":"185","messageId":"186","endLine":13,"endColumn":8},{"ruleId":"183","severity":1,"message":"204","line":15,"column":3,"nodeType":"185","messageId":"186","endLine":15,"endColumn":7},{"ruleId":"183","severity":1,"message":"208","line":104,"column":7,"nodeType":"185","messageId":"186","endLine":104,"endColumn":15},{"ruleId":"195","severity":1,"message":"199","line":109,"column":19,"nodeType":"197","messageId":"198","endLine":109,"endColumn":21},{"ruleId":"195","severity":1,"message":"199","line":109,"column":49,"nodeType":"197","messageId":"198","endLine":109,"endColumn":51},{"ruleId":"209","severity":1,"message":"210","line":149,"column":30,"nodeType":"211","messageId":"212","endLine":149,"endColumn":32},{"ruleId":"195","severity":1,"message":"199","line":150,"column":21,"nodeType":"197","messageId":"198","endLine":150,"endColumn":23},{"ruleId":"195","severity":1,"message":"199","line":186,"column":25,"nodeType":"197","messageId":"198","endLine":186,"endColumn":27},{"ruleId":"195","severity":1,"message":"199","line":199,"column":28,"nodeType":"197","messageId":"198","endLine":199,"endColumn":30},{"ruleId":"183","severity":1,"message":"213","line":55,"column":10,"nodeType":"185","messageId":"186","endLine":55,"endColumn":14},{"ruleId":"183","severity":1,"message":"214","line":55,"column":16,"nodeType":"185","messageId":"186","endLine":55,"endColumn":23},{"ruleId":"195","severity":1,"message":"196","line":69,"column":23,"nodeType":"197","messageId":"198","endLine":69,"endColumn":25},{"ruleId":"183","severity":1,"message":"215","line":88,"column":7,"nodeType":"185","messageId":"186","endLine":88,"endColumn":15},{"ruleId":"216","severity":1,"message":"217","line":151,"column":7,"nodeType":"202","endLine":151,"endColumn":54},{"ruleId":"183","severity":1,"message":"218","line":6,"column":7,"nodeType":"185","messageId":"186","endLine":6,"endColumn":19},{"ruleId":"219","severity":1,"message":"220","line":19,"column":3,"nodeType":"221","messageId":"222","endLine":35,"endColumn":4},{"ruleId":"200","severity":1,"message":"201","line":9,"column":9,"nodeType":"202","endLine":13,"endColumn":10},{"ruleId":"183","severity":1,"message":"223","line":4,"column":22,"nodeType":"185","messageId":"186","endLine":4,"endColumn":26},{"ruleId":"183","severity":1,"message":"224","line":11,"column":12,"nodeType":"185","messageId":"186","endLine":11,"endColumn":21},{"ruleId":"195","severity":1,"message":"199","line":27,"column":24,"nodeType":"197","messageId":"198","endLine":27,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":34,"column":11,"nodeType":"202","endLine":44,"endColumn":12},{"ruleId":"200","severity":1,"message":"201","line":47,"column":11,"nodeType":"202","endLine":51,"endColumn":12},{"ruleId":"200","severity":1,"message":"201","line":54,"column":11,"nodeType":"202","endLine":54,"endColumn":65},{"ruleId":"200","severity":1,"message":"201","line":57,"column":11,"nodeType":"202","endLine":61,"endColumn":12},{"ruleId":"195","severity":1,"message":"199","line":67,"column":24,"nodeType":"197","messageId":"198","endLine":67,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":74,"column":11,"nodeType":"202","endLine":78,"endColumn":12},{"ruleId":"200","severity":1,"message":"201","line":81,"column":11,"nodeType":"202","endLine":91,"endColumn":12},{"ruleId":"200","severity":1,"message":"201","line":94,"column":11,"nodeType":"202","endLine":94,"endColumn":65},{"ruleId":"200","severity":1,"message":"201","line":97,"column":11,"nodeType":"202","endLine":97,"endColumn":65},{"ruleId":"183","severity":1,"message":"204","line":8,"column":3,"nodeType":"185","messageId":"186","endLine":8,"endColumn":7},{"ruleId":"183","severity":1,"message":"225","line":17,"column":23,"nodeType":"185","messageId":"186","endLine":17,"endColumn":32},{"ruleId":"183","severity":1,"message":"226","line":36,"column":15,"nodeType":"185","messageId":"186","endLine":36,"endColumn":21},{"ruleId":"183","severity":1,"message":"204","line":11,"column":3,"nodeType":"185","messageId":"186","endLine":11,"endColumn":7},{"ruleId":"183","severity":1,"message":"227","line":13,"column":8,"nodeType":"185","messageId":"186","endLine":13,"endColumn":13},{"ruleId":"183","severity":1,"message":"226","line":16,"column":15,"nodeType":"185","messageId":"186","endLine":16,"endColumn":21},{"ruleId":"183","severity":1,"message":"228","line":17,"column":20,"nodeType":"185","messageId":"186","endLine":17,"endColumn":31},{"ruleId":"183","severity":1,"message":"229","line":20,"column":18,"nodeType":"185","messageId":"186","endLine":20,"endColumn":27},{"ruleId":"183","severity":1,"message":"230","line":23,"column":21,"nodeType":"185","messageId":"186","endLine":23,"endColumn":33},{"ruleId":"183","severity":1,"message":"231","line":26,"column":20,"nodeType":"185","messageId":"186","endLine":26,"endColumn":31},{"ruleId":"183","severity":1,"message":"232","line":29,"column":22,"nodeType":"185","messageId":"186","endLine":29,"endColumn":35},{"ruleId":"183","severity":1,"message":"233","line":32,"column":21,"nodeType":"185","messageId":"186","endLine":32,"endColumn":33},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],["234"],["235"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["236"],"'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Dropdown' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'calcHeight' is defined but never used.","'List' is defined but never used.","'firebase' is defined but never used.","'useStateValue' is defined but never used.","'Input' is defined but never used.","'location' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'stat' is assigned a value but never used.","'setStat' is assigned a value but never used.","'onbpress' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'getLocalData' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Link' is defined but never used.","'bookGenre' is assigned a value but never used.","'useParams' is defined but never used.","'setBid' is assigned a value but never used.","'Dummy' is defined but never used.","'setBookName' is assigned a value but never used.","'setAuthor' is assigned a value but never used.","'setBookImage' is assigned a value but never used.","'setBookDesc' is assigned a value but never used.","'setBookCopies' is assigned a value but never used.","'setBookGenre' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},"Update the dependencies array to be: [dispatch]",{"range":"239","text":"240"},[1222,1224],"[dispatch]"]