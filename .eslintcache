[{"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\index.js":"1","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\reportWebVitals.js":"2","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\App.js":"3","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Library.js":"4","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Header.js":"5","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Dropdown.js":"6","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\DropdownMenusalone.js":"7","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\CssTrans.js":"8","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\DropdownItemsalone.js":"9","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\NavItemsalone.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":557,"mtime":1607064921588,"results":"14","hashOfConfig":"12"},{"size":203,"mtime":1607065284332,"results":"15","hashOfConfig":"12"},{"size":1049,"mtime":1607337906973,"results":"16","hashOfConfig":"12"},{"size":4374,"mtime":1607334859375,"results":"17","hashOfConfig":"12"},{"size":1967,"mtime":1607335707733,"results":"18","hashOfConfig":"12"},{"size":995,"mtime":1607335592059,"results":"19","hashOfConfig":"12"},{"size":354,"mtime":1607335043072,"results":"20","hashOfConfig":"12"},{"size":433,"mtime":1607270661792,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1wiqzcu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\index.js",[],["48","49"],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\reportWebVitals.js",[],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\App.js",[],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Library.js",[],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Header.js",["50"],"D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\Dropdown.js",["51","52"],"import \"./Dropdown.css\";\r\nimport { ReactComponent as BellIcon } from \"./icons/bell.svg\";\r\nimport { ReactComponent as MessengerIcon } from \"./icons/messenger.svg\";\r\nimport { ReactComponent as CaretIcon } from \"./icons/caret.svg\";\r\nimport { ReactComponent as PlusIcon } from \"./icons/plus.svg\";\r\nimport { ReactComponent as CogIcon } from \"./icons/cog.svg\";\r\nimport { ReactComponent as ChevronIcon } from \"./icons/chevron.svg\";\r\nimport { ReactComponent as ArrowIcon } from \"./icons/arrow.svg\";\r\nimport { ReactComponent as BoltIcon } from \"./icons/bolt.svg\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Dropdown({ className }) {\r\n  return (\r\n    <Navbar className={className}>\r\n      <NavItem icon={<PlusIcon />} />\r\n      <NavItem icon={<BellIcon />} />\r\n      <NavItem icon={<MessengerIcon />} />\r\n\r\n      <NavItem icon={<CaretIcon />}>\r\n        <DropdownMenu></DropdownMenu>\r\n      </NavItem>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className={`${\"navbar \" + props.className}`}>\r\n      <ul className=\"navbar-nav\">{props.children}</ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction NavItem(props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <a href=\"#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\r\n        {props.icon}\r\n      </a>\r\n\r\n      {open && props.children}\r\n      {/* {open && <h1>Hey</h1>} */}\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction DropdownMenu() {\r\n  const [activeMenu, setActiveMenu] = useState(\"main\");\r\n  const [menuHeight, setMenuHeight] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setMenuHeight(dropdownRef.current?.firstChild.offsetHeight);\r\n  }, []);\r\n\r\n  function calcHeight(el) {\r\n    const height = el.offsetHeight;\r\n    setMenuHeight(height);\r\n  }\r\n\r\n  function DropdownItem(props) {\r\n    return (\r\n      <a\r\n        href=\"#\"\r\n        className=\"menu-item\"\r\n        onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}\r\n      >\r\n        <span className=\"icon-button\">{props.leftIcon}</span>\r\n        {props.children}\r\n        <span className=\"icon-right\">{props.rightIcon}</span>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown\" style={{ height: menuHeight }} ref={dropdownRef}>\r\n      <CSSTransition\r\n        in={activeMenu === \"main\"}\r\n        timeout={500}\r\n        classNames=\"menu-primary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem>Home</DropdownItem>\r\n          <DropdownItem\r\n            leftIcon={<CogIcon />}\r\n            rightIcon={<ChevronIcon />}\r\n            goToMenu=\"settings\"\r\n          >\r\n            Books\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            leftIcon=\"🦧\"\r\n            rightIcon={<ChevronIcon />}\r\n            goToMenu=\"animals\"\r\n          >\r\n            My Account\r\n          </DropdownItem>\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={activeMenu === \"settings\"}\r\n        timeout={500}\r\n        classNames=\"menu-secondary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem goToMenu=\"main\" leftIcon={<ArrowIcon />}>\r\n            <h2>My Tutorial</h2>\r\n          </DropdownItem>\r\n          <DropdownItem leftIcon={<BoltIcon />}>HTML</DropdownItem>\r\n          <DropdownItem leftIcon={<BoltIcon />}>CSS</DropdownItem>\r\n          <DropdownItem leftIcon={<BoltIcon />}>JavaScript</DropdownItem>\r\n          <DropdownItem leftIcon={<BoltIcon />}>Awesome!</DropdownItem>\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={activeMenu === \"animals\"}\r\n        timeout={500}\r\n        classNames=\"menu-secondary\"\r\n        unmountOnExit\r\n        onEnter={calcHeight}\r\n      >\r\n        <div className=\"menu\">\r\n          <DropdownItem goToMenu=\"main\" leftIcon={<ArrowIcon />}>\r\n            <h2>Animals</h2>\r\n          </DropdownItem>\r\n          <DropdownItem leftIcon=\"🦘\">Kangaroo</DropdownItem>\r\n          <DropdownItem leftIcon=\"🐸\">Frog</DropdownItem>\r\n          <DropdownItem leftIcon=\"🦋\">Horse?</DropdownItem>\r\n          <DropdownItem leftIcon=\"🦔\">Hedgehog</DropdownItem>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\DropdownMenusalone.js",["53"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport CssTrans from \"./CssTrans\";\r\nimport \"./DropdownMenusalone.css\";\r\n\r\nfunction DropdownMenusalone(props) {\r\n  const [activeMenu, setActiveMenu] = useState(\"main\");\r\n  const [menuHeight, setMenuHeight] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n  useEffect(() => {\r\n    setMenuHeight(dropdownRef.current?.firstChild.offsetHeight);\r\n  }, []);\r\n  function calcHeight(el) {\r\n    const height = el.offsetHeight;\r\n    setMenuHeight(height);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\"dropdownMenusalone__dropdown \" + props.className}\r\n      // className={\"dropdownMenusalone__dropdown\"}\r\n      style={{ height: menuHeight }}\r\n      ref={dropdownRef}\r\n    >\r\n      <CssTrans\r\n        setMenuHeight={setMenuHeight}\r\n        setActiveMenu={setActiveMenu}\r\n        activeMenu={activeMenu}\r\n        thisMenu=\"main\"\r\n        menuClassName=\"menu-primary\"\r\n        dropdownstuff={[\r\n          { name: \"Home\" },\r\n          { name: \"Books\", goToMenu: \"settings\" },\r\n          { name: \"My Account\", goToMenu: \"accountfns\" },\r\n        ]}\r\n      />\r\n      <CssTrans\r\n        setMenuHeight={setMenuHeight}\r\n        setActiveMenu={setActiveMenu}\r\n        activeMenu={activeMenu}\r\n        thisMenu=\"settings\"\r\n        menuClassName=\"menu-secondary\"\r\n        dropdownstuff={[\r\n          { name: \"Back\", goToMenu: \"main\" },\r\n          { name: \"View all\" },\r\n          { name: \"View by category\" },\r\n          { name: \"View by Author\" },\r\n        ]}\r\n      />\r\n      <CssTrans\r\n        setMenuHeight={setMenuHeight}\r\n        setActiveMenu={setActiveMenu}\r\n        activeMenu={activeMenu}\r\n        thisMenu=\"accountfns\"\r\n        menuClassName=\"menu-secondary\"\r\n        dropdownstuff={[\r\n          { name: \"Back\", goToMenu: \"main\" },\r\n          { name: \"Login\" },\r\n          { name: \"Register\" },\r\n          { name: \"Members\" },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropdownMenusalone;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\CssTrans.js",["54"],"import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./CssTrans.css\";\r\nimport DropdownItemsalone from \"./DropdownItemsalone\";\r\n// menuClassName=menu-primary\r\n// thisMenu=main\r\nfunction CssTrans({\r\n  activeMenu,\r\n  setActiveMenu,\r\n  thisMenu,\r\n  menuClassName,\r\n  dropdownstuff,\r\n  setMenuHeight,\r\n}) {\r\n  function calcHeight(e) {\r\n    const height = e.offsetHeight;\r\n    setMenuHeight(height);\r\n  }\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={activeMenu == thisMenu}\r\n      timeout={500}\r\n      classNames={menuClassName}\r\n      unmountOnExit\r\n      onEnter={calcHeight}\r\n    >\r\n      <div className=\"cssTrans__menu\">\r\n        {dropdownstuff.map((item, ind) => (\r\n          <DropdownItemsalone\r\n            goToMenu={item.goToMenu ? item.goToMenu : \"\"}\r\n            setActiveMenu={setActiveMenu}\r\n          >\r\n            {item.name}\r\n          </DropdownItemsalone>\r\n        ))}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default CssTrans;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\DropdownItemsalone.js",["55"],"import React from \"react\";\r\nimport \"./DropdownItemsalone.css\";\r\n\r\nfunction DropdownItemsalone(props) {\r\n  return (\r\n    <a\r\n      href=\"#\"\r\n      className=\"dropdownItemsalone__menu-item\"\r\n      onClick={() => props.goToMenu && props.setActiveMenu(props.goToMenu)}\r\n    >\r\n      {props.children}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default DropdownItemsalone;\r\n","D:\\git_loc\\ReactPlayground\\thesublimewebsite\\src\\LibraryManagement\\NavItemsalone.js",["56"],"import React, { useState } from \"react\";\r\nimport \"./NavItemsalone.css\";\r\n\r\nfunction NavItemsalone(props) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <li className={\"navItemssalone__nav-item \" + props.className}>\r\n      <a href=\"#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\r\n        {props.menutitle}\r\n      </a>\r\n\r\n      {open && props.children}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavItemsalone;\r\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":41,"column":7,"nodeType":"67","endLine":41,"endColumn":74},{"ruleId":"65","severity":1,"message":"66","line":67,"column":7,"nodeType":"67","endLine":71,"endColumn":8},{"ruleId":"61","severity":1,"message":"68","line":12,"column":12,"nodeType":"63","messageId":"64","endLine":12,"endColumn":22},{"ruleId":"69","severity":1,"message":"70","line":22,"column":22,"nodeType":"71","messageId":"72","endLine":22,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":6,"column":5,"nodeType":"67","endLine":10,"endColumn":6},{"ruleId":"65","severity":1,"message":"66","line":8,"column":7,"nodeType":"67","endLine":8,"endColumn":74},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'calcHeight' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]